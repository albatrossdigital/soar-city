<?php

/*function flight_city_custom_theme($initialize = FALSE) {
  $custom_theme = &drupal_static(__FUNCTION__);
  dpm(arg(0));
  dpm($ar)
  return $custom_theme;
}*/

/**
 * Implements hook_menu()
 **/
function flight_city_config_menu() {
  $items['external-service'] = array(
    'title' => 'Embed code',
    'page callback' => 'flight_city_config_external_service',
    'access callback' => TRUE,
    //'access arguments' => array('view the administration theme'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function flight_city_config_external_service($region) {
  return '<!-- PAGE CONTENT GOES HERE -->CONTENT';
}

// from http://stackoverflow.com/a/3345069/1327637;
// css from http://stackoverflow.com/a/9798430/1327637
function _flight_city_config_replace_paths(&$code) {
  global $base_url;

  // Inline CSS
  $code = preg_replace("#url\((?!\s*['\"]?(?:https?:))\s*(['\"])?#i", 'url($1'.$base_url.'$2', $code);
  
  // HTML
  $code = preg_replace("#(<\s*(a|img)\s+[^>]*(href|src|url)\s*=\s*[\"'])(?!\#|http|mailto|javascript)([^\"'>]+)([\"'>]+)#i", '$1'.$base_url.'$4$5', $code);
}

function _flight_city_config_process_html_content($template_file, $vars) {
  $html = theme_render_template($template_file, $vars);
  _flight_city_config_replace_paths($html);
  return htmlentities($html);
}


function flight_city_config_preprocess_page(&$vars) {
  //dpm($vars);
  if(in_array('page__external_service', $vars['theme_hook_suggestions'])) {
    // run theme pre-processes
    zurb_foundation_preprocess_page($vars);
    flight_city_preprocess_page($vars);

    // Set up users
    global $user;
    $temp_user = $user;
    // Set to anon for render
    $user = user_load(0);
    
    $theme_path = drupal_get_path('theme', 'flight_city') . '/templates/';

    // do page
    $template_file = $theme_path . 'page--external-service--page-wrap.tpl.php';
    $vars['external_page'] = _flight_city_config_process_html_content($template_file, $vars);

    // do header
    //$vars['theme_hook_suggestions'][] = 'page__external_service__header_only';
    $template_file = $theme_path . 'page--external-service--header-only.tpl.php';
    $vars['external_header'] = _flight_city_config_process_html_content($template_file, $vars);

    // do content
    $template_file = $theme_path . 'page--external-service--content-wrap.tpl.php';
    $vars['external_content'] = _flight_city_config_process_html_content($template_file, $vars);

    // do footer
    $template_file = $theme_path . 'page--external-service--footer-only.tpl.php';
    $vars['external_footer'] = _flight_city_config_process_html_content($template_file, $vars);

    // restore user
    $user = $temp_user;
  };
}

function flight_city_config_preprocess_html(&$vars) {
  if(in_array('html__external_service', $vars['theme_hook_suggestions'])) {
    // Set up users
    global $user;
    $temp_user = $user;
    // Set to anon for render
    $user = user_load(0);

    //$GLOBALS['conf']['preprocess_css'] = FALSE;
    //$GLOBALS['conf']['preprocess_js'] = FALSE;

    $vars['external_scripts_header'] = htmlentities(drupal_get_js('header', NULL, FALSE));
    $vars['external_scripts_footer'] = htmlentities(drupal_get_js('footer', NULL, FALSE));
    $vars['external_css'] = htmlentities(drupal_get_css(NULL, FALSE));

    // restore user
    $user = $temp_user;
  }
}


function flight_city_config_navbar() {
  $items = array();

  // The 'Home' tab is a simple link, which is wrapped in markup associated
  // with a visual tab styling.
  $items['help'] = array(
    '#type' => 'navbar_item',
    'tab' => array(
      '#type' => 'link',
      '#title' => t('Help'),
      '#href' => 'http://www.baltimore.ifsight.com/help#page-title',
      '#options' => array(
        'attributes' => array(
          'title' => t('My Workbench'),
          'class' => array('navbar-icon', 'navbar-icon-help'),
        ),
      ),
    ),
    '#weight' => 1000,
  );

  

  return $items;
}

/**
 * Implements hook_form_alter.
 * File customizations.
 */
function flight_city_config_form_alter(&$form, $form_state, $form_id) {
  if (strpos($form_id, 'media_edit_') !== FALSE || $form_id === 'file_entity_add_upload') {
    // Hide the domain selection option when uploading files.
    if (!empty($form['domain_file']) && !user_access('administer files')) {
      $form['domain_file']['#access'] = FALSE;
    }

    // Make the alt field required
    $form['field_file_image_alt_text'][$form['field_file_image_alt_text']['#language']][0]['value']['#required'] = TRUE;

    // Set the submit function to Redirect to the workbench file list if this is a multiedit field.
    if (arg(3) === 'edit-multiple') {
      $form['actions']['submit']['#submit'][] = 'flight_city_config_media_edit_form_submit';
    }
  }

}

/**
 * Implements hook_form_submit.
 * Redirect to the workbench file list.
 */
function flight_city_config_media_edit_form_submit($form, &$form_state) {
  $form_state['redirect'] = 'admin/workbench/files';
}

/**
 * Implements hook_form_alter.
 * Hide the domain selection option when uploading files.
 */
function flight_city_config_form_file_entity_add_upload_alter(&$form, $form_state) {
  if (!empty($form['domain_file']) && !user_access('administer files')) {
    $form['domain_file']['#access'] = FALSE;
  }
}