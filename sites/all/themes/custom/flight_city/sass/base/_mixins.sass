// import compass
@import "compass/css3"
@import "compass/utilities"

$fa-include-css: false
// get icons
@import "components/icons-fontawesome"

//***********************************
// START FLIGHT MIXINS
// available from base for reference
//***********************************

// sets element as visible
// use on :before / :after
//
//** $display: sets display
//** $direction: position absolute? use: left, right, top, bottom
//** $amount: amount to set $direction as absolute
//
// @mixin before-as-image($display: block, $direction: false, $amount: 0)

// simple list clear: padding, margin, list-style 
//
// @mixin list-clear()


// simple inline list
//
// @mixin list-float()


// hit all headers
//
// @mixin all-headers()


// makes div an overflow ellipse
//
// @mixin ellipsis()


// hit all form inputs
//
//** $select: also hit select
//
// @mixin all-form-inputs($select: true)


// strips foundation button styling into a link
//
//** $color: color of link
//** $hover: hover color of link
//
// @mixin undo-button($color: $anchor-font-color, $hover: $anchor-font-color-hover)


// Grid / Layout


// Gets em-compensated value (useful for headers, buttons)
// not especially useful now rem's are being used
//
//** $size: desired em
//** $element: size to modify by (eg. $h2-font-size)
//
// @function compensate-size($size, $element, $base: rem-calc($rem-base))


// add / remove column padding 
//
//** $half: true - sets padding to column-gutter/2, otherwise uses value passed as padding. Use 0 to remove
//** $modify: if value present passes padding through compensate-size
//
// @mixin column-padding($half: true, $modify: false)


// expand row - expands a div with negative margins
//
//** $half: true - sets margin to column-gutter/2, otherwise uses value passed as margin. Use 0 to remove
//** $modify: if value present passes padding through compensate-size
//
// @mixin expand-row($half: true, $modify: false)


// runs both column padding and expand row with same value
//
//** $half: true - sets margin to column-gutter/2, otherwise uses value passed as margin. Use 0 to remove
//** $modify: if value present passes padding through compensate-size
//
// @mixin expand-and-padding($half: true, $modify: false)


// fakes a column if proper html structure doesn't allow
//
//** $position: first or last sets padding to 0 accordingly, 
//** $columns: column count
//
// @mixin fake-column($position: first, $columns: ($total-columns/2))


// quick even columns using fake column
// accepts list of selectors
//
//** $selectors: list of css selectors to run through
//** $column-counts: list of column widths (eg. "2 4 2"), or false if just equal
//** $property: simple poperty in list format to add to all fake columns (eg. "display block")
//
// @mixin quick-columns($selectors, $column-counts: false, $property: false)


// Border for columns or interior elements that don't have the proper width
// Like border on a row is too wide
//
//** $margin: what margin the border should have, use negative to expand border
//** $padding: padding added to element 
//** $border: border property (eg. 1px solid black)
//** $direction: top or bottom, places border either above or below
//** $hide: optional selector to hide border, defaults to last/first child depending on direction 
//
// @mixin nice-row-border($margin: $column-gutter/2, $padding: 1em, $border: 1px solid $gray, $direction: bottom, $hide: false)


// centers an element
//
// @mixin centered()


// centers an element with a max width
//
//** $width: max-width element should take
//
// @mixin max-width-center($width: $grid-max-width)


// Responsive

// takes content and puts it inside the $media query... simple shortcut
//
//** $media: a media query, (eg. $small-only, $large-up, ect)
// @mixin respond($media)


//************************************
// Sprites
//************************************

// simple background sprite, does not use compass
//
//** $x: x position
//** $y: y position
//** $img: file name, assumes in /images
//** $repeat: repeat settings
//
// @mixin image-sprite($x, $y, $img: "sprite.png", $repeat: no-repeat)


// text replacing sprite
//
//** $width: width of element
//** $height: height of element
//** $left: x position
//** $top: : y position
//** $img: file name, assumes in /images
//** $repeat: repeat settings
//
// @mixin image-replace($width, $height, $left, $top, $img: "sprite.png", $repeat: no-repeat)


// Compass sprite mixin, can be used inside media queries
// http://compass-style.org/reference/compass/helpers/sprites/
//
//** $map: name of sprite map 
//** $sprite: name of image file 
//** $offset-x: x offset 
//** $offset-y: y offset 
//** $repeat: repeat settings 
//** $height: true if auto set to size of image 
//** $width: true if auto set to size of image 
//** $hover: if hover effect insert name of hover sprite
//
// @mixin get-sprite($map, $sprite, $offset-x: 0, $offset-y: 0, $repeat: no-repeat, $height: true, $width: true, $hover: false)


//***********************************
// Animations
//***********************************


// Default variables
//
//** $animation-time: 1s!default
//** $animation-rotation-border-color-inactive: #eee!default
//** $animation-rotation-border-color: #ddd!default
//** $animation-rotation-border-width: rem-calc(2)!default


// Sets up css animation
//
//** $time: Speed
//
// @mixin rotation($time: $animation-time)


// prints out rotation definition
//
// @mixin rotation-init


// Active spinner
//
//** $border-color: color of active spinner 
//** $time: Speed
//
// @mixin spinner-active($border-color: $animation-rotation-border-color, $time: $animation-time)


// Spinner container
// 
//** $dimensions: size of spinner in list format
//** $border-color-inactive: color of
//** $border-width: width of spinner border
//
// @mixin spinner-core($dimensions, $border-color-inactive: $animation-rotation-border-color-inactive, $border-width: $animation-rotation-border-width)


// Flight variables
//
// ******************************************************

$animation-time: 0.75s
$animation-rotation-border-color-inactive: $gray
$animation-rotation-border-color: $gray-dark
$animation-rotation-border-width: rem-calc(2)!default

+rotation-init


//***********************************
// END FLIGHT MIXINS
// 
//***********************************



// @file
// Place your mixins here. Feel free to roll your own mixins.

// clearix override
//
@mixin clearfix()
  &:after
    content: "."
    display: block
    height: 0
    clear: both
    visibility: hidden

  /* IE6 */
  & * html
    height: 1%
  
  /* IE7 */
  .clearfix *:first-child + html & 
    min-height: 1%


//***********************************
// Sprite Definitions
//
// Create folder in images/ called icons/ place any .png files in there,
// and reference them by their file name
//***********************************

//@import "compass/utilities/sprites/base"

//$disable-magic-sprite-selectors: true

// Use these lines for traditional compass sprites
// see http://compass-style.org/help/tutorials/spriting/
//@import "icons/*.png";

//@include all-icons-sprites;

// Use this style for sprites inside media queries
// for use with +get-sprite() mixin
//$sprites: sprite-map("sprites/*.png")

// shortcut for sprites
@mixin s-image($sprite, $offset-x: 0, $offset-y: 0, $repeat: no-repeat, $height: true, $width: true, $hover: false)
  +get-sprite($sprites, $sprite, $offset-x, $offset-y, $repeat, $height, $width, $hover)

// shortcut for hover images
@mixin s-image-hover($sprite, $hover: "#{$sprite}-hover")
  +s-image($sprite, 0, 0, no-repeat, true, true, $hover)



/***********************************
// Silent Extends
//
// Silent extends help cut down on the length of compiled css by routing
// each call to the extend at the top of the css file.
//
// They cannot as of SASS 3.2.5 be used within media queries
//
//***********************************

// general
// -----------------------------------
// use the +e() mixin

%hide
  display: none

%show
  display: block

%offscreen
  position: absolute
  left: -10000px
  top: auto
  width: 1px
  height: 1px
  overflow: hidden
  display: inline

// backgrounds
// -----------------------------------
// use the +b() mixin

%background-gray
  background: $gray-lighter
  margin-bottom: $small-region-pad-large

%background-reset
  background: transparent

// text colors
// -----------------------------------
// use the +c() mixin

%color-normal
  color: $body-font-color

%color-link-color
  color: $anchor-font-color

%color-hover-color
  color: $anchor-font-color-hover

%color-link
  @extend %color-link-color

  &:hover
    @extend %color-hover-color

%color-link-alt
  color: $blue-link-alt

  &:hover
    color: darken($blue-link-alt, 10%)

%color-link-gray
  color: $gray

  &:hover
    color: darken($gray, 10%)

%color-link-white
  color: $white

  &:hover
    color: darken($white, 10%)

%color-link-header
  color: $black

  &:hover
    color: $blue-link

  &:active
    color: $blue-link-active

%color-link-header-full
  a 
    color: $black

  &:hover
    a
      color: $blue-link

  &:active
    a
      color: $blue-link-active

// fonts
// -----------------------------------
// use the +f() mixin

%font-weight-normal
  font-weight: $font-weight-normal

%font-weight-bold
  font-weight: $font-weight-bold

%font-normal
  font-family: $body-font-family
  font-style: $body-font-style
  font-weight: $body-font-weight

%font-alt
  font-family: $ff-alt
  font-style: normal
  font-weight: $font-weight-normal

%font-alt-bold
  @extend %font-alt

%font-alt-alt
  font-family: $ff-alt-alt
  font-style: normal
  font-weight: $font-weight-normal

%font-alt-alt-bold
  @extend %font-alt-alt
  font-weight: $font-weight-bold

%font-reset
  @extend %font-normal
  font-size: $base-font-size
  line-height: $base-line-height

%font-reset-full
  @extend %font-reset
  color: $body-font-color
  text-transform: none


// headers
// -----------------------------------
// use the +h() mixin

%header-core
  color: $header-font-color
  text-rendering: $header-text-rendering
  margin-top: $header-top-margin
  margin-bottom: $header-bottom-margin
  line-height: $header-line-height

%header-1
  @extend %header-core
  @extend %font-alt
  font-size: $h1-font-size

%header-2
  @extend %header-core
  @extend %font-alt
  font-size: $h2-font-size

%header-3
  @extend %header-core
  @extend %font-alt-alt-bold
  font-size: $h3-font-size

%header-4
  @extend %header-core
  @extend %font-alt-alt-bold
  font-size: $h4-font-size

%header-5
  @extend %header-core
  @extend %font-alt-alt
  font-size: $h5-font-size

%header-6
  @extend %header-core
  font-size: $h6-font-size

// general extend
// use: +e(hide)
@mixin e($extend)
  @extend %#{$extend}

// extend for backgrounds
// use: +b(reset)
@mixin b($extend)
  @extend %background-#{$extend}

// extend for text color
// use: +c(normal)
@mixin c($extend)
  @extend %color-#{$extend}

// extend for font styles
// use: +f(reset)
@mixin f($extend)
  @extend %font-#{$extend}

// extend for header styles
// use: +h(1)
@mixin h($extend)
  @extend %header-#{$extend}


//***********************************
// Helpers
//
//***********************************

@function common-border-val($color: $gray, $width: 1px)

  @return solid $color $width

// Set var
$common-border: common-border-val()

@mixin common-border($direction: bottom, $color: $gray, $width: 1px)

  $selector: border

  @if $direction
    $selector: border-#{$direction}

  #{$selector}: common-border-val($color, $width)


@mixin disable-while-loading($loading: '&', $loaded: '[data-uuid]', $icon: false, $size: rem-calc(50), $color: $gray)
  @if $icon
    +icon(spinner, ($size*(53/50)), $color)

    &:before
      +simple-center-both($size)
      height: $size
      z-index: 1
      width: $size
      +rotation

  #{$loading}
    +opacity(.2)
    +transition(opacity ease-in .2s)
    @if $icon
      position: relative
      z-index: 0
  
    @if $loaded
      &#{$loaded}
        +opacity(1)
        @if $icon
          position: absolute
          z-index: 2


//***********************************
// Layout elements
//
//***********************************

@mixin background-box($padding: $small-region-pad-large)
  +b(gray)
  padding: $padding


//***********************************
// Menu Styles
//
//***********************************


@mixin side-bar-menu-dynamic($levels: 3, $wrapper: '.menu-block-wrapper', $active-parent: 'li.active-trail:not(.active)')
  max-width: 100%
  overflow: hidden

  #{$wrapper}
    //padding-right: ($levels - 1) * (100%)
    width: $levels*(100%)
    float: left
    +transition(all ease-in 0.3s)

    @for $i from 1 through ($levels)

      &.level_#{$i}
        margin-left: ($i) * (-100%)

    ul
      float: left
      margin-left: 0
      width: (100%)/$levels
    
    [data-menu-back]
      a
        +nice-icon(chevron-left)
        border: none



// Side bar menu styles
@mixin side-bar-menu($menu: 'ul.menu', $title: 'h2.block-title', $active: 'a.active')
  
  #{$title}
    margin-top: rem-calc(20)
    +h(4)

  #{$menu}
    +side-nav

    li
      border-bottom: $side-nav-divider-size $side-nav-divider-style $side-nav-divider-color

      &:first-child
        border-top: $side-nav-divider-size $side-nav-divider-style $side-nav-divider-color

    a
      border-left: 3px solid transparent
      padding: rem-calc(10 20 10 17)

    #{$active}
      border-left-color: $gold

    


$main-menu-border-size: rem-calc(3)

// Main menu Link Style
@mixin  main-menu-link($color: $topbar-link-color, $color-hover: $topbar-link-color-hover, $border-color-hover: $gray)
  color: $color
  font-family: $topbar-link-font-family
  font-size: $topbar-link-font-size
  font-weight: $topbar-link-weight
  padding:  0
  border-top: $main-menu-border-size solid transparent
  background: $topbar-link-bg
  height: $topbar-height
  text-transform: $topbar-link-text-transform
  line-height: $topbar-height - $main-menu-border-size
  display: inline-block

  &:hover
    background: $topbar-link-bg-hover
    color: $color-hover

// Main menu Active link style
@mixin  main-menu-link-active($color: $topbar-link-color-active, $color-hover: $topbar-link-color-active-hover)
  color: $color
  border-top-color: $color
  background: $topbar-link-bg-active

  &:hover
    background: $topbar-link-bg-active-hover
    border-top-color: darken($color, 10%)
    color: darken($color, 10%)


// Main menu stlyes
@mixin main-menu-style($container: 'li', $active: '.active, .active-trail')
  +list-clear

  #{$container}
    padding: 0
    display: block
    margin-bottom: rem-calc(5)

    a
      +main-menu-link()

    &#{$active}
      a
        +main-menu-link-active()

// Main menu in horizontal
@mixin main-menu-style-horizontal($include: false, $container: 'li', $active: '.active, .active-trail')
  @if $include
    +main-menu-style($container, $active)

  #{$container}
    display: inline-block

    a
      padding: 0 $topbar-link-padding



//***********************************
// Calendar
//
//***********************************

@mixin calendar-box($first: '.date-display-single > *:first-child', $second: '.date-display-single > *:last-child')
  border: common-border-val($gray-border)
  text-align: center
  padding: rem-calc(12 0)
  position: relative
  +f(alt-alt)
  text-transform: uppercase

  &:before
    +before-as-image(block, top)
    background: $gold
    height: rem-calc(3)
    width: 100%
  
  #{$first}
    font-size: rem-calc(16)

  #{$second}
    font-size: rem-calc(36)
    padding: rem-calc(12 0 6 0)




//***********************************
// Responsive tables
// 
// restric
// http://dbushell.com/2012/01/05/responsive-tables-2/
//***********************************

@mixin mobile-tables($table-border: $gray, $min-height: 44px)
  display: block
  position: relative
  width: 100% 
  border-collapse: collapse 
  border-spacing: 0

  &.sticky-header
    display: none!important    

  thead,
  tbody
    border: 1px solid $table-border

  thead
    border-right: 0!important
    display: block 
    float: left
    max-width: 50%

    tr
      display: block

  tbody  
    border-left: 0!important
    display: block!important
    width: auto 
    position: relative 
    overflow-x: auto 
    white-space: nowrap

    tr  
      display: inline-block!important
      vertical-align: top

  tr
    border: none!important
    padding: 0!important 

  th,
  td
    font-size: ($table-row-font-size)!important
    margin: 0 
    min-height: $min-height
    padding: 0.7em!important
    vertical-align: top

  th
    display: block!important
    text-align: left 

    &, & > *
      +ellipsis

  td
    display: block!important